


Git
#revert back to previous state if you delete files before committing.
git checkout -f #-f will force overwriting the current changes

#create branches to make changes without modifying the parent files
git checkout -b $(name)

#check where you are at… which branch
git branch

#commit
git commit -am #-a flag commiting all modifications to existing files

#merge, results back into the master branch
git checkout master 	#switch to branch ‘master’
git merge $(name)	#merge!
git branch -d $(name)	#delete the branch or clean up!
git branch -D $(name)	#delete the branceh though havent merged in the changes.

Deployment
-There are a variety of options:
	1. Phusion Passenger-
		*Better performance? Can hook your web app to any unix servers (including aws)
		*Costs money for the enterprise level but there is free tier.
	2. Heroku-
		*really easy to deploy. Don't worry about backend stuff they will take care of it
		*Costs quite a bit of money once getting some traffic.
	3.	Engine Yard

#if you use sqlite for development mode then use gem 'pg' in the production if deploying
#to heroku because heroku only supports postgresql

#Run bundle install with a special flag if you want to prevent the local installtion of any
# production gems
bundle install --without production

Heroku
	heroku login
	heroku keys:add
	heroku create # to create a place on the heroku servers

	#deploy with Heroku
	git push heroku master

	#other commands...
	https://devcenter.heroku.com/articles/heroku-command


#Users Resource
rails generate scaffold User name:string email:string #Scaffolding is the auto generation of simple #set of models


Undoing Things

	rails generate controller StaticPages home help
	rails destroy  controller StaticPages home help

	rails generate model User name:string email:string
	rails destroy model User

	rake(or rails) db:migrate
	rake db:rollback #undo a single migration step
	db:migrate VERSION=0

Testing

ex)
	require 'test_helper'

	class StaticPagesControllerTest < ActionDispatch::IntegrationTest

	  test "should get home" do
	    get static_pages_home_url
	    assert_response :success
	  end

	  test "should get help" do
	    get static_pages_help_url
	    assert_response :success
	  end
	end

#run it with 'rails test'